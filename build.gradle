plugins {
    id 'java'
    id "io.quarkus"
    id 'pmd'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://maven.cubrid.org/"
    }
}

pmd {
    ruleSetFiles = files("dodexstart.xml")
    ruleSets = []
    ignoreFailures = true
    toolVersion = "6.36.0"
}

ext {
    vertxVersion = "4.1.2"
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    
    implementation 'io.quarkus:quarkus-websockets'
    implementation "io.quarkus:quarkus-mutiny:${quarkusPlatformVersion}"
    implementation "io.quarkus:quarkus-resteasy-mutiny:${quarkusPlatformVersion}"

    implementation "io.vertx:vertx-jdbc-client:$vertxVersion"
    implementation 'io.quarkus:quarkus-reactive-mysql-client'
    implementation "io.quarkus:quarkus-reactive-pg-client"
    implementation 'io.quarkus:quarkus-reactive-db2-client'
    implementation "io.quarkus:quarkus-vertx-core:${quarkusPlatformVersion}"
    implementation "io.quarkus:quarkus-vertx-web:${quarkusPlatformVersion}"
    implementation "io.quarkus:quarkus-vertx:${quarkusPlatformVersion}"
    
    implementation "io.quarkus:quarkus-resteasy-jackson:${quarkusPlatformVersion}"
    implementation 'io.quarkiverse.jooq:quarkus-jooq:0.2.2'
    implementation "io.quarkus:quarkus-jdbc-h2:${quarkusPlatformVersion}"
    implementation "io.quarkus:quarkus-jdbc-mariadb:${quarkusPlatformVersion}"
    implementation "io.quarkus:quarkus-jdbc-postgresql:${quarkusPlatformVersion}"
    implementation "io.quarkus:quarkus-jdbc-db2:${quarkusPlatformVersion}"
    implementation "io.vertx:vertx-rx-java2:$version"
    implementation 'io.quarkus:quarkus-smallrye-health'
    
    implementation group:"org.xerial", name:"sqlite-jdbc", version:"3.31.1"
    implementation group: 'cubrid', name: 'cubrid-jdbc', version: '11.0.1.0286'

    testImplementation "io.quarkus:quarkus-junit5:${quarkusPlatformVersion}"
    testImplementation 'io.rest-assured:rest-assured'

}

group 'dmo.fs'
version '2.1.0'


compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}
sourceCompatibility = "11"
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileTestJava {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}
